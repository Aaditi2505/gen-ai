# -*- coding: utf-8 -*-
"""predicting number from sequence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mN9B6RnLCQyQf5h88dVUV9rhZU5-ioNR
"""

import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN,Dense
import matplotlib.pyplot as plt

sequence=np.array([i for i in range(1,101)])

window_size=3
x=[]
y=[]

for i in range(len(sequence)-window_size):
  x.append(sequence[i:i+window_size])
  y.append(sequence[i+window_size])
x=np.array(x)
y=np.array(y)
x=x.reshape((x.shape[0],x.shape[1],1))

model=Sequential()
model.add(SimpleRNN(units=32,return_sequences=True,input_shape=(window_size,1)))
model.add(Dense(units=1))
model.compile(optimizer='adam',loss='mean_squared_error')

window_size = 3

x = x.reshape((x.shape[0], x.shape[1], 1))
display(x.shape)

model = Sequential()
model.add(SimpleRNN(units=32, return_sequences=False, input_shape=(window_size, 1)))
model.add(Dense(units=1))
model.compile(optimizer='adam', loss='mean_squared_error')

model.fit(x,y,epochs=300,verbose=0)
print("training complete")

test_input=np.array([8,9,10])
test_input=test_input.reshape((1,window_size,1))
predicted=model.predict(test_input)
print(predicted)

prediction=model.predict(x)
plt.plot(sequence)
plt.plot(prediction)
plt.legend()
plt.title("prediction")
plt.show()